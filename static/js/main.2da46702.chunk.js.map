{"version":3,"sources":["components/Splash/Styles.tsx","components/Splash/index.tsx","components/ui/GlobalStyles.tsx","components/ui/theme/Theme.tsx","App.tsx","reportWebVitals.ts","index.tsx"],"names":["Line","styled","div","p","theme","highlight","Title","h1","green","Subtitle","h2","yellow","SplashWrapper","Splash","className","GlobalStyles","createGlobalStyle","bg","fg","comment","cyan","orange","pink","purple","red","Theme","children","App","reportWebVitals","onPerfEntry","Function","then","getCLS","getFID","getFCP","getLCP","getTTFB","ReactDOM","render","StrictMode","document","getElementById"],"mappings":"4LAEaA,EAAOC,IAAOC,IAAV,6GAID,SAACC,GAAD,OAAOA,EAAEC,MAAMC,aAGlBC,EAAQL,IAAOM,GAAV,+IAGP,SAACJ,GAAD,OAAOA,EAAEC,MAAMI,SAKbC,EAAWR,IAAOS,GAAV,kJAGV,SAACP,GAAD,OAAOA,EAAEC,MAAMO,UAKbC,EAAgBX,IAAOC,IAAV,2J,OCZXW,EAXA,kBACb,eAACD,EAAD,WACE,cAACZ,EAAD,UACE,cAACM,EAAD,CAAOQ,UAAU,QAAjB,4BAEF,cAACd,EAAD,UACE,cAACS,EAAD,sCCmBSM,EAvB4DC,YAAH,kVAYtD,SAACb,GAAD,OAAOA,EAAEC,MAAMa,MAEpB,SAACd,GAAD,OAAOA,EAAEC,MAAMc,MCCtBd,EAAsB,CAC1Ba,GAAI,UACJC,GAAI,UACJb,UAAW,UACXc,QAAS,UACTC,KAAM,UACNZ,MAAO,UACPa,OAAQ,UACRC,KAAM,UACNC,OAAQ,UACRC,IAAK,UACLb,OAAQ,WAWKc,EAJe,SAAC,GAAD,IAAGC,EAAH,EAAGA,SAAH,OAC5B,cAAC,IAAD,CAAetB,MAAOA,EAAtB,SAA8BsB,KC3BjBC,EAPH,kBACV,eAAC,EAAD,WACE,cAAC,EAAD,IACA,cAAC,EAAD,QCOWC,EAZS,SAACC,GACnBA,GAAeA,aAAuBC,UACxC,6BAAqBC,MAAK,YAAkD,IAA/CC,EAA8C,EAA9CA,OAAQC,EAAsC,EAAtCA,OAAQC,EAA8B,EAA9BA,OAAQC,EAAsB,EAAtBA,OAAQC,EAAc,EAAdA,QAC3DJ,EAAOH,GACPI,EAAOJ,GACPK,EAAOL,GACPM,EAAON,GACPO,EAAQP,OCJdQ,IAASC,OACP,cAAC,IAAMC,WAAP,UACE,cAAC,EAAD,MAEFC,SAASC,eAAe,SAM1Bb,M","file":"static/js/main.2da46702.chunk.js","sourcesContent":["import styled from 'styled-components'\n\nexport const Line = styled.div`\n  line-height: 3rem;\n  padding: 1rem 0;\n  margin: 1rem 0;\n  background: ${(p) => p.theme.highlight};\n`\n\nexport const Title = styled.h1`\n  font-family: 'Bebas Neue', cursive;\n  font-size: 3.5rem;\n  color: ${(p) => p.theme.green};\n  margin: 0;\n  line-height: inherit;\n`\n\nexport const Subtitle = styled.h2`\n  font-size: 2.5rem;\n  font-family: 'Inconsolata', monospace;\n  color: ${(p) => p.theme.yellow};\n  margin: 0;\n  line-height: inherit;\n`\n\nexport const SplashWrapper = styled.div`\n  transform: translateY(calc(50vh - 50%));\n  display: flex;\n  text-align: center;\n  flex-direction: column;\n  padding: 0;\n`\n\nexport default {\n  Line,\n  Title,\n  Subtitle,\n  SplashWrapper,\n}\n","import { Line, Title, Subtitle, SplashWrapper } from './Styles'\n\nconst Splash = () => (\n  <SplashWrapper>\n    <Line>\n      <Title className=\"title\">Aaron Dosser</Title>\n    </Line>\n    <Line>\n      <Subtitle>Software Engineer</Subtitle>\n    </Line>\n  </SplashWrapper>\n)\n\nexport default Splash\n","import { createGlobalStyle, DefaultTheme, GlobalStyleComponent } from 'styled-components'\n\ninterface GlobalStyleProps {}\n\nconst GlobalStyles: GlobalStyleComponent<GlobalStyleProps, DefaultTheme> = createGlobalStyle`\n  * {\n    box-sizing: border-box;\n  }\n\n  html, body {\n    height: 100%;\n    width: 100%;\n    margin: 0;\n  }\n\n  body {\n    background: ${(p) => p.theme.bg};\n    font-family: 'Inconsolata', serif;\n    color: ${(p) => p.theme.fg}\n  }\n\n  h1, h2, h3, h4, h5 {\n    font-family: 'Work Sans', sans-serif;\n    line-height: 100%;\n  }\n`\n\nexport default GlobalStyles\n","import { FC } from 'react'\nimport { ThemeProvider } from 'styled-components'\n\nexport interface DraculaTheme {\n  bg: string\n  fg: string\n  highlight: string\n  comment: string\n  cyan: string\n  green: string\n  orange: string\n  pink: string\n  purple: string\n  red: string\n  yellow: string\n}\n\n// color palette is Dracula\n// https://draculatheme.com\nconst theme: DraculaTheme = {\n  bg: '#282a36',\n  fg: '#f8f8f2',\n  highlight: '#44475a',\n  comment: '#6272a4',\n  cyan: '#8be9fd',\n  green: '#50fa7b',\n  orange: '#ffb86c',\n  pink: '#ff79c6',\n  purple: '#bd93f9',\n  red: '#ff5555',\n  yellow: '#f1fa8c',\n}\n\ninterface ThemeProps {\n  children: JSX.Element | JSX.Element[]\n}\n\nconst Theme: FC<ThemeProps> = ({ children }: ThemeProps) => (\n  <ThemeProvider theme={theme}>{children}</ThemeProvider>\n)\n\nexport default Theme\n","import Splash from './components/Splash'\nimport GlobalStyles from './components/ui/GlobalStyles'\nimport Theme from './components/ui/theme/Theme'\n\nconst App = () => (\n  <Theme>\n    <GlobalStyles />\n    <Splash />\n  </Theme>\n)\n\nexport default App\n","import { ReportHandler } from 'web-vitals'\n\nconst reportWebVitals = (onPerfEntry?: ReportHandler) => {\n  if (onPerfEntry && onPerfEntry instanceof Function) {\n    import('web-vitals').then(({ getCLS, getFID, getFCP, getLCP, getTTFB }) => {\n      getCLS(onPerfEntry)\n      getFID(onPerfEntry)\n      getFCP(onPerfEntry)\n      getLCP(onPerfEntry)\n      getTTFB(onPerfEntry)\n    })\n  }\n}\n\nexport default reportWebVitals\n","import React from 'react'\nimport ReactDOM from 'react-dom'\nimport App from './App'\nimport reportWebVitals from './reportWebVitals'\n\nReactDOM.render(\n  <React.StrictMode>\n    <App />\n  </React.StrictMode>,\n  document.getElementById('root'),\n)\n\n// If you want to start measuring performance in your app, pass a function\n// to log results (for example: reportWebVitals(console.log))\n// or send to an analytics endpoint. Learn more: https://bit.ly/CRA-vitals\nreportWebVitals()\n"],"sourceRoot":""}